#!/bin/bash
#!/bin/bash
blocks=("procedures_defnoreturn" "procedures_defreturn" "procedures_callnoreturn" "procedures_callreturn" "procedures_ifreturn" "lists_create_with" "lists_repeat" "lists_length" "lists_isEmpty" "lists_indexOf" "lists_getIndex" "lists_setIndex" "lists_getSublist" "lists_split" "lists_sort" "lists_statement" "controls_repeat_ext" "controls_repeat" "controls_whileUntil" "controls_for" "controls_forEach" "controls_flow_statements" "variables_get" "variables_set" "after_purchase" "contract_check_result" "read_details" "trade_again" "before_purchase" "purchase" "ask_price" "payout" "during_purchase" "sell_at_market" "check_sell" "sell_price" "bb_statement" "bba_statement" "ema_statement" "emaa_statement" "rsi_statement" "rsia_statement" "sma_statement" "smaa_statement" "macda_statement" "input_list" "period" "std_dev_multiplier_up" "std_dev_multiplier_down" "fast_ema_period" "slow_ema_period" "signal_ema_period" "tick" "ticks" "ohlc" "ohlc_values" "read_ohlc" "get_ohlc" "check_direction" "tick_analysis" "last_digit" "lastDigitList" "is_candle_black" "ohlc_values_in_list" "read_ohlc_obj" "balance" "total_profit" "total_runs" "notify" "loader" "block_holder" "epoch" "timeout" "trade_definition" "trade_definition_market" "trade_definition_tradetype" "trade_definition_contracttype" "trade_definition_candleinterval" "trade_definition_restartbuysell" "trade_definition_restartonerror" "trade_definition_tradeoptions" "logic_compare" "controls_if" "logic_boolean" "logic_operation" "logic_null" "logic_ternary" "logic_negate" "math_change" "math_constant" "math_constrain" "math_modulo" "math_number" "math_number_positive" "math_number_property" "math_on_list" "math_random_float" "math_random_int" "math_round" "math_arithmetic" "math_single" "math_trig" "text" "text_join" "text_statement" "text_append" "text_length" "text_isEmpty" "text_indexOf" "text_charAt" "text_getSubstring" "text_changeCase" "text_trim" "text_print" "text_prompt_ext")
for i in ${blocks[@]}
do
	component=""
	block_name="$i"
	array=(${block_name//_/ })
	block_name_prefix="${array[0]}"
	for i in "${array[@]}"
	do
		component="$component$(tr "[a-z]" "[A-Z]" <<< ${i:0:1})${i:1}"
	done

	path=""
	if [ "$block_name_prefix" = "procedures" ]; then
		path="Advanced/Functions/"
	elif [ "$block_name_prefix" = "lists" ]; then 
		path="Advanced/List/"
	elif [ "$block_name_prefix" = "controls" ]; then
		path="Advanced/Loops/"
	elif [ "$block_name_prefix" = "variables" ]; then
		path="Advanced/Variable/"
	elif [ "${array[1]}" = "statement" ]; then
		path="Binary/Indicators/"
	elif [ "$block_name_prefix" = "trade_definition" ]; then
		path="Binary/Trade Definition/"
	elif [ "$block_name_prefix" = "logic" ] || [ block_name_prefix = "controls" ]; then
		path="Logic/"
	elif [ "$block_name_prefix" = "math" ]; then
		path="Math/"
	elif [ "$block_name_prefix" = "text" ]; then
		path="Text/"
	fi

	file="./src/scratch/help-components/$path$block_name.test";
	echo "import React                                 from "react";" > $file;
	echo "import HelpBase, { FlyoutVideo }             from "../help_base.jsx";" >> $file;
	echo "import FlyoutBlock                           from "../../../components/flyout-block.jsx";" >> $file;

	echo "const $component = (props) => (" >> $file;
	echo "    <HelpBase title={props.block_node.getAttribute("type")}>" >> $file;
	echo "        <p>Lorem ipsum dolor sit amet, consectetur" >> $file;
	echo "            adipiscing elit. Ut porta id felis id efficitur. Sed mattis lorem ligula," >> $file;
	echo "            ac fringilla eros tempor sed. Nullam commodo vehicula erat, a rutrum libero mattis non." >> $file;
	echo "            Suspendisse sed turpis in purus pellentesque ultrices id at metus. Ut neque ligula, suscipit" >> $file;
	echo "            eu justo a, vulputate mattis diam. Curabitur accumsan arcu id est imperdiet rhoncus et sit amet" >> $file;
	echo "            lorem. Vivamus vitae urna ligula." >> $file;
	echo "        </p>" >> $file;
	echo "        <FlyoutVideo url={"https://www.youtube.com/embed/mi18spqE7R4?controls=0"} />" >> $file;
	echo "        <p>Donec dapibus convallis enim, nec ultrices diam. Nulla commodo lacus vel" >> $file;
	echo "            sapien feugiat tristique. Ut porta auctor bibendum. Phasellus mollis ligula non lacinia auctor." >> $file;
	echo "            Vestibulum ut velit porttitor, eleifend purus et, viverra augue. Nunc consectetur velit a ex posuere," >> $file;
	echo "            Pellentesque id sem id nisl tempor hendrerit. Cras sit amet lorem feugiat, mollis sem in," >> $file;
	echo "            porta nulla. Sed elementum, elit eget congue facilisis, ligula dolor tempus ante," >> $file;
	echo "            quis rutrum nunc leo at leo. Nunc cursus volutpat urna ac sodales. Morbi ultrices consequat felis a feugiat." >> $file;
	echo "        </p>" >> $file;
	echo "        <FlyoutBlock" >> $file;
	echo "            should_center_block={true}" >> $file;
	echo "            should_hide_label={true}" >> $file;
	echo "            block_node={props.block_node}" >> $file;
	echo "        />" >> $file;
	echo "    </HelpBase>" >> $file;
	echo ");" >> $file;

	echo "export default $component;" >> $file;
	cat $file;
done
