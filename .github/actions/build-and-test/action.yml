
name: Build and Test
description: Install, bootstrap, Build and Test


runs:
    using: composite


    steps:

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: package-lock.json


      - name: Setup Docker
        uses: docker/setup-buildx-action@v2

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: |
            - "node_modules"
            - "packages/account/node_modules"
            - "packages/api/node_modules"
            - "packages/appstore/node_modules"
            - "packages/bot-skeleton/node_modules"
            - "packages/bot-web-ui/node_modules"
            - "packages/cashier/node_modules"
            - "packages/components/node_modules"
            - "packages/core/node_modules"
            - "packages/hooks/node_modules"
            - "packages/cfd/node_modules"
            - "packages/indicators/node_modules"
            - "packages/p2p/node_modules"
            - "packages/reports/node_modules"
            - "packages/shared/node_modules"
            - "packages/stores/node_modules"
            - "packages/trader/node_modules"
            - "packages/translations/node_modules"
            - "packages/utils/node_modules"
            - "packages/analytics/node_modules"
            
          key: node_modules-${{ hashFiles('**/package-lock.json') }}
          
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        shell: bash -le {0}

        run: | 
          npm ci
          npm run bootstrap

      - name: Build
        shell: bash -le {0}
        run: npm run build:all

      - name: "Check TypeScript for @deriv/api"
        shell: bash -le {0}
        run: npx tsc --project packages/api/tsconfig.json -noEmit

      - name: "Check TypeScript for @deriv/hooks"
        shell: bash -le {0}
        run: npx tsc --project packages/hooks/tsconfig.json -noEmit

      - name: "Check TypeScript for @deriv/utils"
        shell: bash -le {0}
        run: npx tsc --project packages/utils/tsconfig.json -noEmit

      - name: "Check TypeScript for @deriv/analytics"
        shell: bash -le {0}
        run: npx tsc --project packages/analytics/tsconfig.json -noEmit

      - name: "Check TypeScript for @deriv/stores"
        shell: bash -le {0}
        run: npx tsc --project packages/stores/tsconfig.json -noEmit

      - name: "Check tests for @deriv/hooks"
        shell: bash -le {0}
        run: bash ./scripts/check-tests.sh packages/hooks/src

      - name: "Check tests for @deriv/utils"
        shell: bash -le {0}
        run: bash ./scripts/check-tests.sh packages/utils/src

      - name: "Check tests for @deriv/analytics"
        shell: bash -le {0}
        run: bash ./scripts/check-tests.sh packages/analytics/src

      - name: "Run tests"
        shell: bash -le {0}
        run: JEST_MAX_WORKERS=4 npm test

        